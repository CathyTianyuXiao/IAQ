using CSV
using Plots
using LsqFit  # Package for nonlinear fitting


function loadfile()
    file = CSV.File("20240610.csv")
    return file
end

function getvalues(file)
    n = 197  # Assuming first 197 entries are relevant
    C = [row.C for row in file[1:n]]  # Assuming a column 'C' exists
    Cout = [row.Cout for row in file[1:n]]  # Assuming a column 'Cout' exists
    S = [row.S for row in file[1:n]]  # Assuming a column 'S' exists
    Q = [row.Q for row in file[1:n]]  # Assuming a column 'Q' exists
    return C, Cout, S, Q
end

function model(t, p)
    C, Cout, Q, S = p
    V = 52
    return (-V / Q) .* log.(C0 - Cout) .- log.(C .* Q + Cout .* Q + S) .* V ./ Q .+ t  # Broadcasting operations
end

function getnonlinearfit(C, Cout, S, Q)
    n = length(C)  # Number of data points
    t = 1:n  # Time points, assuming these are your x-values
    p0 = [mean(C), mean(Cout), mean(Q), mean(S)]  # Initial parameter guesses, omitting V since it's constant

    fit = curve_fit(model, t, zeros(n), p0)  # zeros(n) should be replaced with your actual data
    return fit
end

function plotfit()
    file = loadfile()
    C, Cout, S, Q = getvalues(file)
    fit = getnonlinearfit(C, Cout, S, Q)

    n = length(C)
    t = 1:n
    data = model(t, coef(fit))  # Calculate model data

    plot(t, data, label="Fitted Model", linewidth=2)
    scatter!(t, C, label="Original Data")  # Assuming 'C' as the dependent variable
end
