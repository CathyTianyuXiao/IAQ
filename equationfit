using CSV
using Plots
using LsqFit  # Ensure this package is installed for nonlinear fitting

# Load CSV data
function loadfile()
    file = CSV.File("20240610.csv")  # Adjust the filename as necessary
    return file
end

# Extract relevant values from the file
function getvalues(file)
    C = [row."CO2(ppm)" for row in file]  # Using CO2(ppm) as C
    return C
end

# Constants
const Cout = 425   # Fixed Cout value
const S = 1.0      # Placeholder value for S, adjust as needed
const Q = 1.9      # Fixed Q value

# Model for nonlinear fitting
function model(t, p)
    C = p
    V = 52  # Fixed value for V
    C0 = C[1]  # Assuming the first data point represents the initial CO2 concentration
    return (-V / Q) .* log.(C0 - Cout) .- log.(C .* Q + Cout .* Q + S) .* V ./ Q .+ t
end

# Nonlinear fitting process
function getnonlinearfit(C)
    t = 1:length(C)  # Creating a time vector for each data point
    p0 = [mean(C)]   # Initial guess for C
    fit = curve_fit((t, p) -> model(t, p), t, C, p0)  # Using a lambda to pass single-parameter model
    return fit
end

# Plotting function to visualize the data and fit
function plotfit()
    file = loadfile()
    C = getvalues(file)
    fit = getnonlinearfit(C)

    t = 1:length(C)
    fitted_data = model(t, coef(fit))  # Generating model data using fitted parameters

    plot(t, C, seriestype=:scatter, label="Measured CO2", xlabel="Time", ylabel="CO2 (ppm)")
    plot!(t, fitted_data, label="Fitted Model", linewidth=2, color=:red)
end
