using CSV
using Plots
using LsqFit  # Ensure this package is installed for nonlinear fitting


n=197 #get first 197 entries before time jump

# Load CSV data
function loadfile()
    file = CSV.File("20240610.csv")  # Adjust the filename as necessary
    return file
end

# Extract relevant values from the file
function getvalues(file)
   n=197
C=zeros(n) #allocate array for values

for i=1:n #loop to extract co2 values
C[i]=file[i][4]
end

return s
end

# Constants
const Cout = 425   # Fixed Cout value
const Q = 1.9      # Fixed Q value
const V = 52
const C0 = 435

# Model for nonlinear fitting
function model(t, s)
    C = ((C0 - Cout) * -exp((-Q*t)/V) + Cout * Q + s) / Q
s = [1.0]
    return s

end

# Nonlinear fitting process
function getnonlinearfit()
    t = 1:n  # Creating a time vector for each data point
    fit = curve_fit((t, s) -> model(t, s), t, C, s)  # Using a lambda to pass single-parameter model
    return fit
end

# Plotting function to visualize the data and fit
function plotfit()
    file = loadfile()
    C = getvalues(file)
    fit = getnonlinearfit()

    t = 1:n
    fitted_data = model(t, coef(fit))  # Generating model data using fitted parameters

    plot(t, C, seriestype=:scatter, label="Measured CO2", xlabel="Time", ylabel="CO2 (ppm)")
    plot!(t, fitted_data, label="Fitted Model", linewidth=2, color=:red)
end
